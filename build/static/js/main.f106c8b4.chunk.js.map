{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","useEffect","fetch","then","res","json","console","log","message","catch","err","Button","variant","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAoCeA,MAhCf,WACE,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAgBA,OAdAC,qBAAU,WAERC,MAAM,6BACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACJ,GACLO,QAAQC,IAAIR,EAAKS,SACjBR,EAAQD,EAAKS,YAEdC,OAAM,SAAAC,GACLV,EAAQU,QAGX,CAACX,IAGF,6BACGA,EACD,kBAACY,EAAA,EAAD,CAAQC,QAAQ,WAAhB,WAA2C,IAC3C,kBAACD,EAAA,EAAD,CAAQC,QAAQ,aAAhB,aAA+C,IAC/C,kBAACD,EAAA,EAAD,CAAQC,QAAQ,WAAhB,WAA2C,IAC3C,kBAACD,EAAA,EAAD,CAAQC,QAAQ,WAAhB,WAA2C,IAC3C,kBAACD,EAAA,EAAD,CAAQC,QAAQ,UAAhB,UANF,IAM2C,kBAACD,EAAA,EAAD,CAAQC,QAAQ,QAAhB,QAAqC,IAC9E,kBAACD,EAAA,EAAD,CAAQC,QAAQ,SAAhB,SAPF,IAOyC,kBAACD,EAAA,EAAD,CAAQC,QAAQ,QAAhB,QAAqC,IAC5E,kBAACD,EAAA,EAAD,CAAQC,QAAQ,QAAhB,UClBSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.f106c8b4.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nfunction App() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n\n    fetch(\"http://localhost:8080/api\")\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data.message);\n        setData(data.message)\n      })\n      .catch(err => {\n        setData(err)\n      })\n\n  }, [data]);\n\n  return (\n    <div>\n      {data}\n      <Button variant=\"primary\">Primary</Button>{' '}\n      <Button variant=\"secondary\">Secondary</Button>{' '}\n      <Button variant=\"success\">Success</Button>{' '}\n      <Button variant=\"warning\">Warning</Button>{' '}\n      <Button variant=\"danger\">Danger</Button> <Button variant=\"info\">Info</Button>{' '}\n      <Button variant=\"light\">Light</Button> <Button variant=\"dark\">Dark</Button>{' '}\n      <Button variant=\"link\">Link</Button>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}